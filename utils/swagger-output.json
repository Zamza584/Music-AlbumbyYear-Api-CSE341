{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "My API CSE-341",
    "description": "Purpose of api is to sort albums by year and display them to user."
  },
  "servers": [
    {
      "url": "https://album-by-year-api.onrender.com/",
      "description": "main server"
    },
    {
      "url": "http://localhost:8000/",
      "description": "the other server"
    }
  ],
  "basePath": "",
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Login"
        ],
        "summary": "Renders index.html",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/register": {
      "get": {
        "tags": [
          "Login"
        ],
        "summary": "Sends user to register page",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "create a User",
        "description": "",
        "parameters": [],
        "responses": {
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "description": "Data needed to create a contact",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/users"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Validates and login user",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "mz@gmail.com"
                  },
                  "password": {
                    "example": "asdfasdf"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "search by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Insert user id here to get data",
            "example": "648df30be33c0d7dbf54d238"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a User",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "descripion": "Id of the User",
            "example": "648df30be33c0d7dbf54d238"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "description": "Data needed to update a User",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateUsers"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/updateUsers"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "delete a User",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/albums/saveAlbum": {
      "post": {
        "tags": [
          "Albums"
        ],
        "summary": "saves album",
        "description": "Grabs data from an album and then saves that into mongodb. Also the user id is saved into this collection",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "description": "Data needed to save data into db",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/albumData"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/albumData"
              }
            }
          }
        }
      }
    },
    "/albums/{year}": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "get album list by year",
        "description": "*Make sure to login in user first to access and try this out",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/albums/": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "get album list",
        "description": "",
        "parameters": [],
        "responses": {}
      }
    }
  },
  "components": {
    "schemas": {
      "users": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "any"
          },
          "lastName": {
            "type": "string",
            "example": "any"
          },
          "email": {
            "type": "string",
            "example": "any@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "anyany"
          }
        },
        "xml": {
          "name": "users"
        }
      },
      "updateUsers": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Manuel"
          },
          "lastName": {
            "type": "string",
            "example": "Zamalloa"
          },
          "email": {
            "type": "string",
            "example": "zam@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "anyany"
          }
        },
        "xml": {
          "name": "updateUsers"
        }
      },
      "albumData": {
        "type": "object",
        "properties": {
          "albumName": {
            "type": "string",
            "example": "any"
          },
          "albumArtist": {
            "type": "string",
            "example": "any"
          },
          "albumRelease": {
            "type": "string",
            "example": "any"
          },
          "albumLink": {
            "type": "string",
            "example": "link"
          },
          "albumTTracks": {
            "type": "string",
            "example": "num"
          },
          "albumImage": {
            "type": "string",
            "example": "any"
          },
          "user_id": {
            "type": "string",
            "example": "id number"
          }
        },
        "xml": {
          "name": "albumData"
        }
      }
    }
  },
  "schema": [
    "https"
  ]
}